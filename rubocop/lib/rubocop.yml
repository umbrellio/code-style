require: rubocop-rspec

AllCops:
  Exclude:
    - bin/**/*

# LINT

Lint/AmbiguousBlockAssociation:
  # `scope :name, -> (param) { ... }` is a valid syntax
  Enabled: false

Lint/AmbiguousOperator:
  Enabled: true

Lint/NonLocalExitFromIterator:
  Enabled: false

Lint/HandleExceptions:
  Enabled: false

Lint/RescueException:
  Enabled: false

Lint/ShadowingOuterLocalVariable:
  Enabled: false

# Metrics

Metrics/AbcSize:
  Enabled: false

Metrics/BlockLength:
  Exclude:
    - spec/**/*

Metrics/ClassLength:
  Enabled: false

Metrics/CyclomaticComplexity:
  Enabled: false

Metrics/LineLength:
  Max: 100
  AllowHeredoc: false
  AllowURI: false

Metrics/MethodLength:
  Max: 20

Metrics/PerceivedComplexity:
  Enabled: false

# Performance

Performance/Casecmp:
  Enabled: false

# RSpec

RSpec/AnyInstance:
  Enabled: false

RSpec/ExampleLength:
  Max: 20

RSpec/DescribeClass:
  Enabled: false

RSpec/DescribedClass:
  Enabled: false

RSpec/DescribeMethod:
  Enabled: false

RSpec/LetSetup:
  Enabled: false

RSpec/MessageSpies:
  EnforcedStyle: receive

RSpec/MultipleDescribes:
  Enabled: false

RSpec/MultipleExpectations:
  Enabled: false

RSpec/NestedGroups:
  Enabled: false

RSpec/VerifiedDoubles:
  Enabled: false

# Style

Style/AccessorMethodName:
  # This cop assumes every method is accessor
  Enabled: false

Style/AlignParameters:
  Enabled: true

Style/AndOr:
  # `do_something and return`
  Enabled: false

Style/CommentAnnotation:
  # Also, i think that better to use yard's `@todo` and other in ruby code
  Enabled: false

Style/ConditionalAssignment:
  Enabled: false

Style/Documentation:
  Enabled: false

Style/DoubleNegation:
  # Always return booleans in predicates
  Enabled: false

Style/EmptyCaseCondition:
  Enabled: false

Style/EmptyElse:
  Enabled: false

Style/Encoding:
  Enabled: false

Style/IfUnlessModifier:
  Enabled: true

Style/GuardClause:
  Enabled: false

Style/LambdaCall:
  Enabled: false

Style/ModuleFunction:
  Enabled: false

Style/MultilineMethodCallIndentation:
  Enabled: false

Style/MultilineOperationIndentation:
  Enabled: false

Style/MultilineTernaryOperator:
  Enabled: false

Style/NumericLiterals:
  Description: 'Use indent in groups of 3 unlesss you meet project-specific rule'
  Enabled: false

Style/ParallelAssignment:
  Enabled: false

Style/PerlBackrefs:
  # Disable localy if realy neeeded
  Enabled: true

Style/PredicateName:
  # `has_` is generally good
  NamePrefixBlacklist:
    - is_

Style/RaiseArgs:
  Description: 'Use `raise, ErrorClass` in all cases but not when you need ErrorClass constructor'
  Enabled: false

Style/RegexpLiteral:
  EnforcedStyle: mixed
  Enabled: true

Style/RescueModifier:
  Enabled: false

Style/SpaceInLambdaLiteral:
  EnforcedStyle: require_space

Style/StringLiterals:
  EnforcedStyle: double_quotes
  ConsistentQuotesInMultiline: true

Style/SignalException:
  EnforcedStyle: only_raise

Style/SingleLineBlockParams:
  Enabled: false

Style/StringLiteralsInInterpolation:
  Enabled: false

Style/SpaceInsideBrackets:
  Enabled: false

Style/SymbolArray:
  # Disabled by default
  Enabled: true

Style/TrailingCommaInArguments:
  EnforcedStyleForMultiline: comma

Style/TrailingCommaInLiteral:
  EnforcedStyleForMultiline: comma

Style/TrivialAccessors:
  AllowPredicates: true
  # REWIEW: Why don't we disable it?
  Enabled: false

######## Disabled by default
Style/AutoResourceCleanup:
  Description: 'Suggests the usage of an auto resource cleanup version of a method (if available).'
  Enabled: false

Style/CollectionMethods:
  Description: 'Preferred collection methods.'
  StyleGuide: '#map-find-select-reduce-size'
  Enabled: false

Style/Copyright:
  Description: 'Include a copyright notice in each file before any code.'
  Enabled: false

Style/DocumentationMethod:
  Description: 'Public methods.'
  Enabled: false
  Exclude:
    - 'spec/**/*'
    - 'test/**/*'

Style/Encoding:
  Description: 'Use UTF-8 as the source file encoding.'
  StyleGuide: '#utf-8'
  Enabled: false

Style/FirstArrayElementLineBreak:
  Description: >-
                 Checks for a line break before the first element in a
                 multi-line array.
  Enabled: false

Style/FirstHashElementLineBreak:
  Description: >-
                 Checks for a line break before the first element in a
                 multi-line hash.
  Enabled: false

Style/FirstMethodArgumentLineBreak:
  Description: >-
                 Checks for a line break before the first argument in a
                 multi-line method call.
  Enabled: false

Style/FirstMethodParameterLineBreak:
  Description: >-
                 Checks for a line break before the first parameter in a
                 multi-line method parameter definition.
  Enabled: false

Style/ImplicitRuntimeError:
  Description: >-
                 Use `raise` or `fail` with an explicit exception class and
                 message, rather than just a message.
  Enabled: false

Style/InlineComment:
  Description: 'Avoid trailing inline comments.'
  Enabled: false

Style/MethodCallWithArgsParentheses:
  Description: 'Use parentheses for method calls with arguments.'
  StyleGuide: '#method-invocation-parens'
  Enabled: false

Style/MethodCalledOnDoEndBlock:
  Description: 'Avoid chaining a method call on a do...end block.'
  StyleGuide: '#single-line-blocks'
  Enabled: false

Style/MissingElse:
  Description: >-
                Require if/case expressions to have an else branches.
                If enabled, it is recommended that
                Style/UnlessElse and Style/EmptyElse be enabled.
                This will conflict with Style/EmptyElse if
                Style/EmptyElse is configured to style "both"
  Enabled: false
  EnforcedStyle: both
  SupportedStyles:
    # if - warn when an if expression is missing an else branch
    # case - warn when a case expression is missing an else branch
    # both - warn when an if or case expression is missing an else branch
    - if
    - case
    - both

Style/MultilineAssignmentLayout:
  Description: 'Check for a newline after the assignment operator in multi-line assignments.'
  StyleGuide: '#indent-conditional-assignment'
  Enabled: false

Style/OptionHash:
  Description: "Don't use option hashes when you can use keyword arguments."
  Enabled: false

Style/Send:
  Description: 'Prefer `Object#__send__` or `Object#public_send` to `send`, as `send` may overlap with existing methods.'
  StyleGuide: '#prefer-public-send'
  Enabled: false

Style/StringMethods:
  Description: 'Checks if configured preferred methods are used over non-preferred.'
  Enabled: false

Style/SingleLineBlockParams:
  Description: 'Enforces the names of some block params.'
  Enabled: false
