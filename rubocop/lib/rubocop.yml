require: rubocop-rspec

AllCops:
  Exclude:
    - bin/**/*

# LINT

Lint/AmbiguousBlockAssociation:
  # `scope :name, -> (param) { ... }` is a valid syntax
  Enabled: false

Lint/AmbiguousOperator:
  Enabled: true

Lint/NonLocalExitFromIterator:
  Enabled: false

Lint/HandleExceptions:
  Enabled: false

Lint/ShadowingOuterLocalVariable:
  Enabled: false

# Metrics

Metrics/AbcSize:
  Enabled: false

Metrics/BlockLength:
  Exclude:
    - spec/**/*

Metrics/ClassLength:
  Enabled: false

Metrics/CyclomaticComplexity:
  Enabled: false

Metrics/LineLength:
  Max: 100
  AllowHeredoc: false
  AllowURI: false

Metrics/MethodLength:
  Max: 20

Metrics/PerceivedComplexity:
  Enabled: false

# Performance

Performance/Casecmp:
  Enabled: false

# RSpec

RSpec/AnyInstance:
  Enabled: false

RSpec/ExampleLength:
  Max: 20

RSpec/DescribeClass:
  Enabled: false

RSpec/DescribedClass:
  Enabled: false

RSpec/DescribeMethod:
  Enabled: false

RSpec/LetSetup:
  Enabled: false

RSpec/MessageSpies:
  EnforcedStyle: receive

RSpec/MultipleDescribes:
  Enabled: false

RSpec/MultipleExpectations:
  Enabled: false

RSpec/NestedGroups:
  Enabled: false

RSpec/ScatteredSetup:
  Enabled: false

RSpec/VerifiedDoubles:
  Enabled: false

# Style

Style/AccessorMethodName:
  # This cop assumes every method is accessor
  Enabled: false

Style/AlignParameters:
  Enabled: true

Style/AndOr:
  # `do_something and return`
  Enabled: false

Style/CommentAnnotation:
  # Also, i think that better to use yard's `@todo` and other in ruby code
  Enabled: false

Style/ConditionalAssignment:
  Enabled: false

Style/Documentation:
  Enabled: false

Style/DoubleNegation:
  # Always return booleans in predicates
  Enabled: false

Style/EmptyCaseCondition:
  Enabled: false

Style/EmptyElse:
  Enabled: false

Style/Encoding:
  Enabled: false

Style/IfUnlessModifier:
  Enabled: true

Style/GuardClause:
  Enabled: false

Style/LambdaCall:
  Enabled: false

Style/ModuleFunction:
  Enabled: false

Style/MultilineMethodCallIndentation:
  Enabled: false

Style/MultilineOperationIndentation:
  Enabled: false

Style/MultilineTernaryOperator:
  Enabled: false

Style/NumericLiterals:
  Description: 'Use indent in groups of 3 unlesss you meet project-specific rule'
  Enabled: false

Style/ParallelAssignment:
  Enabled: false

Style/PerlBackrefs:
  # Disable localy if realy neeeded
  Enabled: true

Style/PredicateName:
  # `has_` is generally good
  NamePrefixBlacklist:
    - is_

Style/RaiseArgs:
  Description: 'Use `raise, ErrorClass` in all cases but not when you need ErrorClass constructor'
  Enabled: false

Style/RegexpLiteral:
  EnforcedStyle: mixed
  Enabled: true

Style/RescueModifier:
  Enabled: false

Style/SpaceInLambdaLiteral:
  EnforcedStyle: require_space

Style/StringLiterals:
  EnforcedStyle: double_quotes
  ConsistentQuotesInMultiline: true

Style/SignalException:
  EnforcedStyle: only_raise

Style/SingleLineBlockParams:
  Enabled: false

Style/StringLiteralsInInterpolation:
  Enabled: false

Style/SpaceInsideBrackets:
  Enabled: false

Style/TrailingCommaInArguments:
  EnforcedStyleForMultiline: comma

Style/TrailingCommaInLiteral:
  EnforcedStyleForMultiline: comma

Style/TrivialAccessors:
  AllowPredicates: true
  # REWIEW: Why don't we disable it?
  Enabled: false
