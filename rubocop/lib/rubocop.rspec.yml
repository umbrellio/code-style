require: rubocop-rspec

AllCops:
  RSpec/FactoryGirl:
    Patterns:
      - spec/factories.rb
      - spec/factories/**/*.rb
      - features/support/factories/**/*.rb

# Capybara

Capybara/CurrentPathExpectation:
  Enabled: true

Capybara/FeatureMethods:
  Enabled: false

# FactoryGirl

FactoryGirl/DynamicAttributeDefinedStatically:
  Enabled: true

# RSpec

RSpec/AlignLeftLetBrace:
  # Never do it
  Enabled: false

RSpec/AlignRightLetBrace:
  # Never do it
  Enabled: false

RSpec/AnyInstance:
  Enabled: false

RSpec/ExampleLength:
  Max: 20
  Exclude:
    - spec/features/**/*

RSpec/DescribeClass:
  Enabled: false

RSpec/DescribedClass:
  Enabled: false

RSpec/DescribeMethod:
  Enabled: false

RSpec/ExpectInHook:
  # try not to use expect in before / after / around blocks anyway
  Enabled: false

RSpec/FilePath:
  Enabled: false

RSpec/InvalidPredicateMatcher:
  Enabled: true

RSpec/LetBeforeExamples:
  Enabled: true

RSpec/LetSetup:
  Enabled: false

RSpec/MessageChain:
  Enabled: false

RSpec/MessageSpies:
  Enabled: false

RSpec/MultipleDescribes:
  Enabled: false

RSpec/MultipleExpectations:
  Enabled: false

RSpec/MultipleSubjects:
  Enabled: true

RSpec/NestedGroups:
  Enabled: false

RSpec/ReturnFromStub:
  # expect(foo).to receive(:bar) { :baz } # Bad
  # expect(foo).to receive(:bar).and_return(:baz) # Good
  # expect(foo).to receive(:bar).and_return { Time.current } # Good
  Enabled: true

RSpec/PredicateMatcher:
  # Predicate matchers' error messages are shitty, we should not use them unless they aren't
  # expect(foo).to be_nil # good
  # expect(foo).to be_active # bad if foo.inspect takes 5 screens
  # expect(foo.active?).to be_truthy # good
  Enabled: false

RSpec/ScatteredSetup:
  Enabled: false

RSpec/VerifiedDoubles:
  Enabled: false

RSpec/VoidExpect:
  Enabled: true
